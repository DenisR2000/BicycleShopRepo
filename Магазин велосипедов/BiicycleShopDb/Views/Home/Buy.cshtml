@model BiicycleShopDb.Models.Order

@{
}


<div class="d-flex flex-column flex-wrap align-content-center justify-content-center align-items-center">
    <h2>Order form</h2>
   
    <form method="post" class="d-flex flex-column m-3 p-3">
        <input type="hidden" name="BicycleId" value="@ViewBag.BicycleId" />
        <div class="d-flex flex-row m-2">
            @Html.LabelFor(x => x.Name, null, new { @class = "input-group-text" } )
            @Html.TextBoxFor(x => x.Name, null, new { @class = "form-control" })
        </div>
        <div>
            @Html.ValidationMessageFor(x => x.Name)
        </div>
        <div class="d-flex flex-row m-2">
            @Html.LabelFor(x => x.LastName, null, new { @class = "input-group-text" })
            @Html.TextBoxFor(x => x.LastName, null, new { @class = "form-control" })
        </div>
        <div>
            @Html.ValidationMessageFor(x => x.LastName)
        </div>
        <div class="d-flex flex-row m-2">
            @Html.LabelFor(x => x.Phone, null, new { @class = "input-group-text" })
            @Html.TextBoxFor(x => x.Phone, null, new { @class = "form-control" })
        </div>
        <div>
            @Html.ValidationMessageFor(x => x.Phone)
        </div>
        <div class="d-flex flex-row m-2">
            @Html.LabelFor(x => x.Email, null, new { @class = "input-group-text" })
            @Html.TextBoxFor(x => x.Email, null, new { @class = "form-control" })
        </div>
        <div>
            @Html.ValidationMessageFor(x => x.Email)
        </div>
        <input type="submit" class="btn" value="Send" />
    </form>
</div>